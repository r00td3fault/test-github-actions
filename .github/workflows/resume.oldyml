name: Prueba workflow

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  # This workflow contains a single job called "build"
  otherJob:
    runs-on: ubuntu-latest

    #matrix strategy poder ejecutar el job con diferentes configuraciones
    strategy:
      matrix:
        php-version: [7.5, 8.0, 8.1]

    env:
      MY_VAR: 3000

    #services
    services:
      mysql:
        image: mysql:latets
        env:
          MYSQL_ROOT_PASSWORD: example
        ports:
          - 3306:3306
    #depends on other job
    needs: build

    steps:
      - name: Create file
        env:
          MY_VAR2: 3000
        run: echo Prueba de texto > text.txt

      - name: Access file
        run: cat text.txt

      - uses: actions/checkout@v4

      - name: action personalizada
        uses: ./.github/actions/my-action
        with:
          message: "parametro pasado"

      - name: run test
        id: test
        run: run test

      - name: deploy
        if: steps.test.outcome == 'success'
        run: run test

      - name: SET UP PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
